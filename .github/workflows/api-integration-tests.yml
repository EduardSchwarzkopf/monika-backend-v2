name: Test FastAPI application
"on":
  push:
    branches:
      - add-testing-to-pipeline
env:
  DB_NAME: "postgres"
  DB_PASSWORD: "postgres"
  DB_USER: "postgres"

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s 
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag pecuny

      - name: Run Container
        run: |
          docker run -d \
            --name testing_pecuny \
            --network="host" \
            -e ENVIRONMENT=test \
            -e DOMAIN="http://127.0.0.1:8000" \
            -e SECRET_KEY="testingsecretkey" \
            -e CSRF_SECRET="csrf_secret" \
            -e SESSION_SECRET_KEY="session_secret_key" \
            -e ALGORITHM=${{ vars.ALGORITHM }} \
            -e ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }} \
            -e DB_NAME=${{ env.DB_NAME }} \
            -e DB_PASSWORD=${{ env.DB_PASSWORD }} \
            -e DB_HOST="localhost" \
            -e DB_PORT="5432" \
            -e DB_USER=${{ env.DB_USER }} \
            -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            -e MAIL_FROM=${{ secrets.MAIL_FROM }} \
            -e MAIL_SERVER=${{ secrets.MAIL_SERVER }} \
            -e MAIL_PORT=${{ secrets.MAIL_PORT }} \
            -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            pecuny

      - name: Check Running Docker Containers
        run: docker ps -a

      - name: Run Tests
        run: |
          docker exec  testing_pecuny poetry run pytest  -v -x -v -s --disable-warnings
