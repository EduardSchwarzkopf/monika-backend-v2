name: CI/CD

on:
  push:
    branches: ["main"]

env:
  IMAGE: ${{ secrets.DOCKER_USERNAME }}/monika-backend:latest

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build docker image
        run: docker build --tag=${{ env.IMAGE }} .
      - name: login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: publish docker image
        run: docker push ${{ env.IMAGE }}

  deploy:
    needs: [build-and-publish]
    runs-on: ubuntu-latest
    env:
      SSH_HOST: webserver
      CONTAINER: monika
      SSH_CMD: ssh -o "StrictHostKeyChecking=no"  
    steps:
      - uses: actions/checkout@v3
      - name: create ssh dir
        run: mkdir --parents ~/.ssh
      - name: create ssh key
        run: |
          set -e
          echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: config ssh
        run: echo -e 'Host ${{ env.SSH_HOST }}\n  HostName schwarzkopf.center\n  Port 22\n  User root\n  IdentityFile ~/.ssh/id_rsa' > ~/.ssh/config
      - name: stop monika
        run: '${{ env.SSH_CMD }} ${{ env.SSH_HOST }}  docker rm --force ${{ env.CONTAINER }} || :'
      - name: copy docker-compose.yml
        run: scp -o "StrictHostKeyChecking=no" docker-compose.yml ${{ env.SSH_HOST }}:docker-compose.yml
      - name: apply docker-compose
        run: ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker-compose up -d
      - name: monika start
        run: |
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker run -d --publish=8000:8000 \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e ALGORITHM=HS256 \
            -e ACCESS_TOKEN_EXPIRE_MINUTES=30 \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DB_HOST=postgres \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_USERNAME=${{ secrets.DB_USER }} \
            -e FIEF_CLIENT_ID=${{ secrets.FIEF_CLIENT_ID }} \
            -e FIEF_CLIENT_SECRET=${{ secrets.FIEF_CLIENT_SECRET }} \
            -e FIEF_ENCRYPTION_KEY=${{ secrets.FIEF_ENCRYPTION_KEY }} \
            -e FIEF_SECRET=${{ secrets.FIEF_SECRET }} \
            --name=${{ env.CONTAINER }} \ 
            ${{ env.IMAGE }}
