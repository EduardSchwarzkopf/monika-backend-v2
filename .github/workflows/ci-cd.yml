name: CI/CD

on:
  push:
    branches: ["main"]

env:
  IMAGE: ${{ secrets.DOCKER_USERNAME }}/monika-backend:latest

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build docker image
        run: docker build --tag=${{ env.IMAGE }} .
      - name: login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: publish docker image
        run: docker push ${{ env.IMAGE }}

  deploy:
    needs: [build-and-publish]
    runs-on: ubuntu-latest
    env:
      SSH_HOST: webserver
      CONTAINER: monika
      SSH_CMD: ssh -o "StrictHostKeyChecking=no"  
    steps:
      - uses: actions/checkout@v3
      - name: create ssh dir
        run: mkdir --parents ~/.ssh
      - name: create ssh key
        run: |
          set -e
          echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: config ssh
        run: echo -e 'Host ${{ env.SSH_HOST }}\n  HostName schwarzkopf.center\n  Port 22\n  User root\n  IdentityFile ~/.ssh/id_rsa' > ~/.ssh/config
      - name: stop monika
        run: '${{ env.SSH_CMD }} ${{ env.SSH_HOST }}  docker rm --force ${{ env.CONTAINER }} || :'
      - name: copy docker-compose.yml
        run: scp -o "StrictHostKeyChecking=no" docker-compose.yml ${{ env.SSH_HOST }}:docker-compose.yml
      - name: create .env
        run: |
          set -e
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} touch .env
          # monika
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "ALGORITHM=HS256" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env'
          # database
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "DB_USER=${{ secrets.DB_USER }}" >> .env'
          # fief 
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "FIEF_CLIENT_ID=${{ secrets.FIEF_CLIENT_ID }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "FIEF_CLIENT_SECRET=${{ secrets.FIEF_CLIENT_SECRET }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "FIEF_ENCRYPTION_KEY=${{ secrets.FIEF_ENCRYPTION_KEY }}" >> .env'
          ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} 'echo "FIEF_SECRET=${{ secrets.FIEF_SECRET }}" >> .env'
      - name: apply docker-compose
        run: ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker-compose up -d
      - name: monika start
        run: ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker run -d --publish=80:8000 -v .env:/home/app/.env --name=${{ env.CONTAINER }} ${{ env.IMAGE }}
