name: CI/CD

on:
    push:
        branches: ["main"]

env:
    IMAGE: ${{ secrets.DOCKER_USERNAME }}/monika-backend:latest

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: build docker image
              run: docker build --tag=${{ env.IMAGE }} .
            - name: login to container registry
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: publish docker image
              run: docker push ${{ env.IMAGE }}

    deploy:
        needs: [build-and-publish]
        runs-on: ubuntu-latest
        env:
            SSH_HOST: webserver
            CONTAINER: monika
            SSH_CMD: ssh -o "StrictHostKeyChecking=no"
        steps:
            - uses: actions/checkout@v3
            - name: create ssh dir
              run: mkdir --parents ~/.ssh
            - name: create ssh key
              run: |
                  set -e
                  echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
            - name: config ssh
              run: echo -e 'Host ${{ env.SSH_HOST }}\n  HostName ${{ vars.HOSTNAME }}\n  Port 22\n  User root\n  IdentityFile ~/.ssh/id_rsa' > ~/.ssh/config
            - name: stop monika
              run: "${{ env.SSH_CMD }} ${{ env.SSH_HOST }}  docker rm --force ${{ env.CONTAINER }} || :"
            - name: pull latest image
              run: ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker pull ${{ env.IMAGE }}
            - name: monika start
              run: >
                  ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker run -d
                  --name=${{ env.CONTAINER }}
                  -e SECRET_KEY=${{ secrets.SECRET_KEY }}
                  -e ENVIRONMENT=${{ vars.ENVIRONMENT }}
                  -e ALGORITHM=${{ vars.ALGORITHM }}
                  -e ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
                  -e DB_NAME=${{ secrets.DB_NAME }}
                  -e DB_HOST=${{ secrets.DB_HOST }}
                  -e DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                  -e DB_PORT=${{ secrets.DB_PORT }}
                  -e DB_USER=${{ secrets.DB_USER }}
                  -e MAIL_USERNAME=${{ vars.MAIL_USERNAME }}
                  -e MAIL_FROM=${{ vars.MAIL_FROM }}
                  -e MAIL_SERVER=${{ vars.MAIL_SERVER }}
                  -e MAIL_PORT=${{ vars.MAIL_PORT }}
                  -e MAIL_PASSWORD=${{ vars.MAIL_PASSWORD }}
                  ${{ env.IMAGE }}
