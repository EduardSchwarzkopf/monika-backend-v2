name: CI/CD

on:
    push:
        branches: ["main"]

env:
    IMAGE: ${{ secrets.DOCKER_USERNAME }}/monika-backend:latest

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: build docker image
              run: docker build --tag=${{ env.IMAGE }} .
            - name: login to container registry
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: publish docker image
              run: docker push ${{ env.IMAGE }}

    deploy:
        needs: [build-and-publish]
        runs-on: ubuntu-latest
        env:
            SSH_HOST: webserver
            CONTAINER: monika
            SSH_CMD: ssh -o "StrictHostKeyChecking=no"
        steps:
            - uses: actions/checkout@v3
            - name: create ssh dir
              run: mkdir --parents ~/.ssh
            - name: create ssh key
              run: |
                  set -e
                  echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
            - name: config ssh
              run: echo -e 'Host ${{ env.SSH_HOST }}\n  HostName ${{ vars.HOSTNAME }}\n  Port 22\n  User root\n  IdentityFile ~/.ssh/id_rsa' > ~/.ssh/config
            - name: stop monika
              run: "${{ env.SSH_CMD }} ${{ env.SSH_HOST }}  docker rm --force ${{ env.CONTAINER }} || :"
            - name: pull latest image
              run: ${{ env.SSH_CMD }} ${{ env.SSH_HOST }} docker pull ${{ env.IMAGE }}
            - name: create run file
              run: |
                  set -e
                  echo "-e IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/monika-backend:latest" >> docker.txt
                  echo "-e ENVIRONMENT=${{ vars.ENVIRONMENT }}" >> docker.txt
                  echo "-e TEST_DB_PORT=${{ secrets.TEST_DB_PORT }}" >> docker.txt
                  echo "-e SECRET_KEY=${{ secrets.SECRET_KEY }}" >> docker.txt
                  echo "-e ALGORITHM=${{ vars.ALGORITHM }}" >> docker.txt
                  echo "-e ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> docker.txt
                  echo "-e DB_NAME=${{ secrets.DB_NAME }}" >> docker.txt
                  echo "-e DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> docker.txt
                  echo "-e DB_PORT=${{ secrets.DB_PORT }}" >> docker.txt
                  echo "-e DB_USER=${{ secrets.DB_USER }}" >> docker.txt
                  echo "-e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> docker.txt
                  echo "-e MAIL_FROM=${{ secrets.MAIL_FROM }}" >> docker.txt
                  echo "-e MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> docker.txt
                  echo "-e MAIL_PORT=${{ secrets.MAIL_PORT }}" >> docker.txt
                  echo "-e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> docker.txt
            - name: copy run file
              run: scp -o "StrictHostKeyChecking=no" docker.txt ${{ env.SSH_HOST }}:docker.txt
